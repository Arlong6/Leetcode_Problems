
int min(int a, int b) {
    return a < b ? a : b;
}
int max(int a, int b) {
    return a > b ? a : b;
}

int maxProduct(int* nums, int numsSize) {
    // 初始化 maxNum 和 minNum 為第一個數字，避免錯誤的初始化
    int rst = nums[0];
    int maxNum = nums[0];
    int minNum = nums[0];

    for (int i = 1; i < numsSize; i++) {
        int cur = nums[i];

        // 當 cur 為負數時，交換 maxNum 和 minNum
        if (cur < 0) {
            int tmp = minNum;
            minNum = maxNum;
            maxNum = tmp;
        }

        // 計算當前值的乘積與自身值的最小和最大值
        maxNum = max(cur * maxNum, cur);
        minNum = min(cur * minNum, cur);

        // 更新最大結果
        rst = max(maxNum, rst);
    }
    return rst;
}
