### Solution 1

**問題：從鏈表末尾移除第 N 個節點⁠[1](https://www.notion.so/19-Remove-Nth-Node-From-End-of-List-2baf0268fb2d4369b771c47f66d754fd?pvs=21)⁠​**

**解法：使用兩次遍歷的方法⁠[1](https://www.notion.so/19-Remove-Nth-Node-From-End-of-List-2baf0268fb2d4369b771c47f66d754fd?pvs=21)⁠​**

**第一次遍歷：計算鏈表長度⁠[1](https://www.notion.so/19-Remove-Nth-Node-From-End-of-List-2baf0268fb2d4369b771c47f66d754fd?pvs=21)⁠​**

**特殊情況處理：如果要刪除的是第一個節點，直接返回 head->next⁠[1](https://www.notion.so/19-Remove-Nth-Node-From-End-of-List-2baf0268fb2d4369b771c47f66d754fd?pvs=21)⁠​**

**第二次遍歷：找到要刪除節點的前一個節點⁠[1](https://www.notion.so/19-Remove-Nth-Node-From-End-of-List-2baf0268fb2d4369b771c47f66d754fd?pvs=21)⁠​**

**刪除操作：將前一個節點的 next 指向要刪除節點的下一個節點⁠[1](https://www.notion.so/19-Remove-Nth-Node-From-End-of-List-2baf0268fb2d4369b771c47f66d754fd?pvs=21)⁠​**

**時間複雜度：O(n)，其中 n 是鏈表長度⁠**

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        // 先歷遍所有值 獲得linked list 長度
        ListNode *current = head;
        int length = 0;
        while (current){
            length +=1;
            current = current -> next;
        }
				// 如果開頭就要刪除 就直接跳過然後return
        if (n == length) {
            head = head->next;
            return head;
        }
				
        int reverseNumber = length - n;
        ListNode *newCurrent = head; 
				// 歷遍newCurrent 到要刪除的點那邊
        for (int i = 0 ; i<reverseNumber-1;i++){
            newCurrent = newCurrent -> next;
        }

        newCurrent->next = newCurrent -> next -> next;

        return head;

    }
};



### Solution 2

**解法 2：使用快慢指針法，只需一次遍歷⁠[1](https://www.notion.so/19-Remove-Nth-Node-From-End-of-List-2baf0268fb2d4369b771c47f66d754fd?pvs=21)⁠​**

**使用虛擬頭節點（dummy node）簡化邊界情況處理⁠[1](https://www.notion.so/19-Remove-Nth-Node-From-End-of-List-2baf0268fb2d4369b771c47f66d754fd?pvs=21)⁠​**

**快指針先移動 n+1 步，然後快慢指針同時移動，直到快指針到達尾部⁠[1](https://www.notion.so/19-Remove-Nth-Node-From-End-of-List-2baf0268fb2d4369b771c47f66d754fd?pvs=21)**


/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        

        ListNode *dummy = new ListNode (0);
        dummy -> next = head;
        ListNode *slow= dummy;
        ListNode *fast= dummy;

  
        for (int i =0 ;i<=n;i++){
            fast = fast->next;
        }

        while (fast){
            slow = slow->next;
            fast = fast->next;
        }

        slow->next = slow->next->next;
        ListNode *newHead = dummy->next;
        delete dummy;
        
        return newHead;
    }
};
