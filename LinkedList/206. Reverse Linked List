Given an integer array `nums` sorted in **non-decreasing** order, return *an array of **the squares of each number** sorted in non-decreasing order*.

**Example 1:**

```
Input: nums = [-4,-1,0,3,10]
Output: [0,1,9,16,100]
Explanation: After squaring, the array becomes [16,1,0,9,100].
After sorting, it becomes [0,1,9,16,100].

```

**Example 2:**

```
Input: nums = [-7,-3,2,3,11]
Output: [4,9,9,49,121]
```

--> Solution

class Solution {
public:
    vector<int> sortedSquares(vector<int>& nums) {
        int length = std::size(nums);
        std::vector<int> output{};
        
        for (int i = 0 ; i<length ; i++){
            output.push_back(nums[i]*nums[i]);
        }
        for (int j=0 ; j<length;j++){
            for (int k=0 ; k<length;k++){
                if (j==k){continue;}
                int temp;
                if (output[j]<output[k]){
                    temp = output[j];
                    output[j] = output[k];
                    output[k] = temp;
                }
            }
        }

        return output;
    }
};
